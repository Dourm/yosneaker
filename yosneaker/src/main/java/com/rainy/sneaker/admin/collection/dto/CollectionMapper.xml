<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rainy.sneaker.admin.collection.dao.CollectionMapper" >
  <resultMap id="BaseResultMap" type="com.rainy.sneaker.admin.collection.dto.Collection" >
    <id column="collection_id" property="collectionId" jdbcType="INTEGER" />
    <result column="collection_article_id" property="collectionArticleId" jdbcType="INTEGER" />
    <result column="collection_account_id" property="collectionAccountId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    collection_id, collection_article_id, collection_account_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.rainy.sneaker.admin.collection.dto.CollectionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sneaker_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sneaker_collection
    where collection_id = #{collectionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sneaker_collection
    where collection_id = #{collectionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rainy.sneaker.admin.collection.dto.CollectionExample" >
    delete from sneaker_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rainy.sneaker.admin.collection.dto.Collection" >
    insert into sneaker_collection (collection_id, collection_article_id, 
      collection_account_id)
    values (#{collectionId,jdbcType=INTEGER}, #{collectionArticleId,jdbcType=INTEGER}, 
      #{collectionAccountId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rainy.sneaker.admin.collection.dto.Collection" >
    insert into sneaker_collection
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="collectionId != null" >
        collection_id,
      </if>
      <if test="collectionArticleId != null" >
        collection_article_id,
      </if>
      <if test="collectionAccountId != null" >
        collection_account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="collectionId != null" >
        #{collectionId,jdbcType=INTEGER},
      </if>
      <if test="collectionArticleId != null" >
        #{collectionArticleId,jdbcType=INTEGER},
      </if>
      <if test="collectionAccountId != null" >
        #{collectionAccountId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rainy.sneaker.admin.collection.dto.CollectionExample" resultType="java.lang.Integer" >
    select count(*) from sneaker_collection
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sneaker_collection
    <set >
      <if test="record.collectionId != null" >
        collection_id = #{record.collectionId,jdbcType=INTEGER},
      </if>
      <if test="record.collectionArticleId != null" >
        collection_article_id = #{record.collectionArticleId,jdbcType=INTEGER},
      </if>
      <if test="record.collectionAccountId != null" >
        collection_account_id = #{record.collectionAccountId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sneaker_collection
    set collection_id = #{record.collectionId,jdbcType=INTEGER},
      collection_article_id = #{record.collectionArticleId,jdbcType=INTEGER},
      collection_account_id = #{record.collectionAccountId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rainy.sneaker.admin.collection.dto.Collection" >
    update sneaker_collection
    <set >
      <if test="collectionArticleId != null" >
        collection_article_id = #{collectionArticleId,jdbcType=INTEGER},
      </if>
      <if test="collectionAccountId != null" >
        collection_account_id = #{collectionAccountId,jdbcType=INTEGER},
      </if>
    </set>
    where collection_id = #{collectionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rainy.sneaker.admin.collection.dto.Collection" >
    update sneaker_collection
    set collection_article_id = #{collectionArticleId,jdbcType=INTEGER},
      collection_account_id = #{collectionAccountId,jdbcType=INTEGER}
    where collection_id = #{collectionId,jdbcType=INTEGER}
  </update>
  <sql id="MysqlSuffix" >
    <if test="page != null" >
      limit #{page.start} , #{page.rows}
    </if>
  </sql>
</mapper>